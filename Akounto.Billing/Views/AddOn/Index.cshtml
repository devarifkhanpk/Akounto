@*@model Plans.Payment.Entities.Billing.AddOnModel*@
@*model IEnumerable<Plans.Payment.Entities.Billing.AddOnModel>*@
@model Plans.Infrastructure.Response<Plans.Payment.Entities.Billing.AddOnViewModel>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    // var addOns = (List<Plans.Payment.Entities.Billing.AddOnModel>)ViewData["resultData"]; // Cast the list
}
@using (Html.BeginForm("Summary", "AddOn", FormMethod.Post, new { id = "frmAddOn" }))
{
    @Html.AntiForgeryToken()
    <table width="100%" id="tblAddons">
        <thead>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4"><hr /></td>
            </tr>
            <tr>
                <td width="55%">Payment Frequency</td>
                <td width="20%"></td>
                <td width="15%">
                    @Html.Label("lblPlanCategory", Model.Data.PlanCategory.PlanDurationName)
                    @Html.Hidden("hdPlanCategoryID", Model.Data.PlanCategory.ID)
                </td>               
                <td width="10%"></td>
            </tr>
            <tr>
                <td>Seleceted Plan</td>
                <td></td>
                <td>@Html.Label("lblPlanName", Model.Data.PlanCategory.PlanName)</td>
                <td >@Html.Label("lblPlanCategoryCost", Convert.ToString(Model.Data.PlanCategory.Cost), new { @class = "planprice" })</td>
                
            </tr>
            <tr>
                <td colspan="4"><hr /></td>
            </tr>
            <tr>
                <td><b>Add-ONs</b></td>
                <td>Quantity</td>
                <td>Unit Price</td>
                <td>Price</td>                
            </tr>
        </thead>

        <tbody>
            @*@{int i = 0;}*@
            @foreach (var element in Model.Data.AddOnItems)
            {
                <tr>
                    <td>
                        @Html.TextBox("desc", element.Description, new { @class = "desc", style = "border: 0px none;" })
                        @Html.Hidden("hdPlanAddonCategoryID", element.ID)
                        @Html.HiddenFor(savModel => element.DurationType)
                        @Html.Hidden("hdDurationDays", element.DurationDays)
                        @Html.Hidden("hdFirstSubcriptionCost", element.FirstSubcriptionCost)
                        @Html.Hidden("hdAddonSubscriptionID", element.AddonSubscriptionID)
                       
                    </td>                    
                    <td>@Html.TextBox("qty", element.Quantity, new { @class = "qty" })</td>
                    <td>
                        @Html.Label("price", element.Cost.ToString(), new { @class = "price", style = "width:50px;border: 0px none;" })
                        @Html.Hidden("hdPrice", element.Cost)
                    </td>
                    <td >
                        @Html.TextBox("subtot", element.Quantity* element.Cost, new { @class = "subtot" })
                    </td>
                </tr>
            }
            <tr>
                <td colspan="4"><hr /></td>
            </tr>

        </tbody>
        <tfoot>
            <tr style="border-block:solid">                
                <td ></td>
                <td colspan="2">Add-on Total</td>
                <td>
                    @*<input type="text" class="grdtot" value="" name="" />*@
                    @Html.TextBox("addonTotal", "", new { @class = "addonTotal" })
                </td>
            </tr>
            <tr style="border-block:solid">
                <td ></td>
                <td colspan="2">Amount to be Period</td>                
                <td>
                    @*<input type="text" class="grdtot" value="" name="" />*@
                    @Html.TextBox("grdtot", "", new { @class = "grdtot" })
                </td>
            </tr>

            <tr style="border-block:solid">
                <td ></td>
                <td colspan="2"></td>                
                <td>
                    <input type="submit" value="Continue" />
                </td>
            </tr>
        </tfoot>
    </table>
}
<script src="https://code.jquery.com/jquery-3.2.1.min.js"
        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous"></script>



<script language="javascript">
    //        $('#txtQty').change(function(){
    //            alert(this.value);

    //});
    //$(function () {
    //    $('[id*=txtQty]').on("change", function () {
    //        var grid = document.getElementById("tblAddons");
    //        var rows = grid.getElementsByTagName("TR");
    //        var amount = 0;
    //        for (var i = 1; i < rows.length; i++) {
    //            var cells = rows[i].getElementsByTagName("TD");
    //            amount += parseFloat(cells[2].val());
    //        }
    //        //$('[id*=txtSum]').val(amount);
    //        alert(amount);
    //    });
    //});
      $(document).ready(function () {
          var $tblrows = $("#tblAddons tbody tr");
          $tblrows.each(function (index) {                      
                 
                      var grandTotal = 0;
                      var planprice = parseFloat($('.planprice').text());
                      $(".subtot").each(function () {
                          var stval = parseFloat($(this).val());
                          grandTotal += isNaN(stval) ? 0 : stval;
                      });
                      $('.addonTotal').val(grandTotal.toFixed(2));
                      $('.grdtot').val((grandTotal + planprice).toFixed(2));
                
             
          });
    });

    $(function () {
        $('.pnm, .price, .subtot, .grdtot').prop('readonly', true);
        var $tblrows = $("#tblAddons tbody tr");
        $tblrows.each(function (index) {
            var $tblrow = $(this);
            $tblrow.find('.qty').on('change', function () {
                var qty = $tblrow.find("[name*=qty]").val();
                var price = parseFloat($tblrow.find("td:eq(2)").text());
                if (qty == '') {
                    qty = 0;
                }
                var subTotal = parseInt(qty, 10) * parseFloat(price);
                if (!isNaN(subTotal)) {
                    $tblrow.find('.subtot').val(subTotal.toFixed(2));
                    var grandTotal = 0;
                    var planprice = parseFloat($('.planprice').text());
                    $(".subtot").each(function () {
                        var stval = parseFloat($(this).val());
                        grandTotal += isNaN(stval) ? 0 : stval;
                    });
                    $('.addonTotal').val(grandTotal.toFixed(2));
                    $('.grdtot').val((grandTotal + planprice).toFixed(2));
                }
            });
        });
    });


    //$(function () {
    //    $('.desc, .price, .subtot, .grdtot').prop('readonly', true);
    //    var $tblrows = $("#tblAddons tbody tr");

    //    $tblrows.each(function (index) {
    //        var $tblrow = $(this);

    //        $tblrow.find('.qty').on('change', function () {

    //            var qty = $tblrow.find("[name=qty]").val();
    //            // var price = $tblrow.find("[name=price]").val();
    //            var price = $tblrow.find("[name=price]").val();
    //            var subTotal = parseInt(qty, 10) * parseFloat(price);

    //            if (!isNaN(subTotal)) {

    //                $tblrow.find('.subtot').val(subTotal.toFixed(2));
    //                var grandTotal = 0;

    //                $(".subtot").each(function () {
    //                    var stval = parseFloat($(this).val());
    //                    grandTotal += isNaN(stval) ? 0 : stval;
    //                });

    //                $('.grdtot').val(grandTotal.toFixed(2));
    //            }
    //        });
    //    });
    //});
    //function calculateSum() {

    //    var sum = 0;
    //    //iterate through each textboxes and add the values
    //    $(".txt").each(function () {

    //        //add only if the value is number
    //        if (this.value.length != 0) {
    //            alert(this.value);
    //            sum += parseFloat(this.value);
    //        }

    //    });
    //.toFixed() method will roundoff the final sum to 2 decimal places
    //$("#txtSum").val(sum.toFixed(2));

            //alert(sum)
    /*}*/
</script>

